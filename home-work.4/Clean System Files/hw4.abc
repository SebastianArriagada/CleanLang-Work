.comp 920 0101110100100
.start __hw4_Start
.depend "_SystemEnumStrict"
.depend "_SystemStrictLists"
.depend "StdStrictLists"
.depend "_SystemEnum"
.depend "StdEnum"
.depend "StdMisc"
.depend "StdFunctions"
.depend "StdCharList"
.depend "StdTuple"
.depend "StdOrdList"
.depend "StdList"
.depend "StdClass"
.depend "StdFile"
.depend "StdString"
.depend "_SystemArray"
.depend "StdArray"
.depend "StdChar"
.depend "StdReal"
.depend "StdInt"
.depend "StdOverloaded"
.depend "StdBool"
.depend "StdEnv"
.endinfo
.module m_hw4 "hw4"
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod StdTuple
.impdesc e_StdTuple_d==;4
.impmod StdList
.implab e_StdList_s++
.implab e_StdList_shd
.impdesc e_StdList_dtl
.implab e_StdList_ntl e_StdList_eatl
.implab e_StdList_s==;45
.impmod StdClass
.impdesc e_StdClass_rEq;
.impmod StdInt
.implab e_StdInt_s+;6
.implab e_StdInt_s-;7
.implab e_StdInt_s^;12
.impdesc e_StdInt_d==;16
.implab e_StdInt_s==;16
.implab e_StdInt_s<;17
.impmod StdOverloaded
.impdesc e_StdOverloaded_r==;
.export __hw4_Start
.o 0 0
__hw4_Start
	build _ 0 n6
.d 1 0
	jmp _driver
.n 0 _ ea6
.o 1 0
n6
	push_node _cycle_in_spine 0
.o 1 0
ea6
.o 1 0
s6
	buildh _Nil 0
	buildI 3
	buildI 3
	buildh _Tuple 2
	buildh _Cons 2
	buildI 0
	buildI 0
	buildh _Tuple 2
	buildh _Cons 2
	buildI -1
	buildI 1
	buildh _Tuple 2
	buildh _Cons 2
	buildI 2
	buildI 2
	buildh _Tuple 2
	buildh _Cons 2
	buildI 2
	buildI 1
	buildI 1
	buildh _Tuple 3
.d 3 0
	jmp s4
.n 2 _ ea4
.o 1 0
n4
	push_node _cycle_in_spine 2
.o 3 0
ea4
	jsr_eval 1
.o 3 0
s4
	buildh _Nil 0
	buildh e_StdInt_d==;16 0
	build_r e_StdClass_rEq; 1 0 0 0
	updatepop_a 0 1
	buildh e_StdInt_d==;16 0
	build_r e_StdClass_rEq; 1 0 0 0
	updatepop_a 0 1
	buildh e_StdTuple_d==;4 2
	push_a 3
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 3 0
	jsr e_StdList_s==;45
.o 0 1 b
	jmp_false else.1
	fillh _Nil 0 2
	pop_a 2
.d 1 0
	rtn
else.1
	push_a 1
	build e_StdList_dtl 1 e_StdList_ntl
	push_a 1
	build _ 2 n4
	push_a 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
.d 1 0
	jsr e_StdList_shd
.o 1 0
	repl_args 2 2
	jsr_eval 1
	jsr_eval 0
	pushI_a 1
	pushI_a 0
	pop_a 2
	push_a 1
	jsr_eval 0
	repl_args 3 3
	jsr_eval 2
	jsr_eval 1
	jsr_eval 0
	pushI_a 2
	pushI_a 1
	pushI_a 0
	pop_a 3
	create
	buildh _Nil 0
	update_a 0 3
	pop_a 1
.d 1 5 iiiii
	jsr s5
.o 1 0
	update_a 1 3
	updatepop_a 0 2
.d 3 0
	jmp e_StdList_s++
.o 1 5 iiiii
s5
	push_b 2
	pushI 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
.d 0 2 ii
	jsr e_StdInt_s^;12
.o 0 1 i
	push_b 5
	push_b 3
	subI
	pushI 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
.d 0 2 ii
	jsr e_StdInt_s^;12
.o 0 1 i
	push_b 5
	push_b 3
	subI
	pushI 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
.d 0 2 ii
	jsr e_StdInt_s^;12
.o 0 1 i
	addI
	update_b 1 6
	updatepop_b 0 5
	subI
	push_b 0
	pushI 0
	ltI
	jmp_false else.2
	buildh _Nil 0
	buildI 1
	fillh _Cons 2 2
	pop_b 1
.d 1 0
	rtn
else.2
	pushI 0
	push_b 1
	eqI
	jmp_false else.3
	buildh _Nil 0
	buildI 0
	fillh _Cons 2 2
	pop_b 1
.d 1 0
	rtn
else.3
	buildh _Nil 0
	buildI -1
	fillh _Cons 2 2
	pop_b 1
.d 1 0
	rtn
