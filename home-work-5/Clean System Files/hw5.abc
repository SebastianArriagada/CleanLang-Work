.comp 920 0101110100100
.start __hw5_Start
.depend "_SystemEnumStrict"
.depend "_SystemStrictLists"
.depend "StdStrictLists"
.depend "_SystemEnum"
.depend "StdEnum"
.depend "StdMisc"
.depend "StdFunctions"
.depend "StdCharList"
.depend "StdTuple"
.depend "StdOrdList"
.depend "StdList"
.depend "StdClass"
.depend "StdFile"
.depend "StdString"
.depend "_SystemArray"
.depend "StdArray"
.depend "StdChar"
.depend "StdReal"
.depend "StdInt"
.depend "StdOverloaded"
.depend "StdBool"
.depend "StdEnv"
.endinfo
.module m_hw5 "hw5"
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod _SystemEnum
.implab e__SystemEnum_s_from_to;6
.impmod StdList
.implab e_StdList_s++
.impdesc e_StdList_dhd
.implab e_StdList_shd
.implab e_StdList_nhd _
.impdesc e_StdList_dtl
.implab e_StdList_ntl e_StdList_eatl
.implab e_StdList_sfilter
.impdesc e_StdList_dlength;47
.implab e_StdList_nlength;47
.implab e_StdList_ssum;72
.implab e_StdList_s==;85
.impmod StdInt
.implab e_StdInt_s+;6
.implab e_StdInt_s-;7
.implab e_StdInt_s/;10
.implab e_StdInt_sone;11
.implab e_StdInt_s==;16
.implab e_StdInt_s<;17
.impdesc e_StdInt_drem;28
.implab e_StdInt_srem;28
.implab e_StdInt_nrem;28
.impmod StdBool
.implab e_StdBool_snot
.export __hw5_Start
.o 0 0
__hw5_Start
	build _ 0 n10
.d 1 0
	jmp _driver
.n 0 _ ea10
.o 1 0
n10
	push_node _cycle_in_spine 0
.o 1 0
ea10
.o 1 0
s10
	pushI 200
	pushI 100
.d 1 2 ii
	jmp s7
.o 1 2 ii
s7
	create
	push_b 1
	push_b 1
	update_b 1 3
	updatepop_b 0 2
.d 1 2 ii
	jsr e__SystemEnum_s_from_to;6
.o 1 0
	buildh d9 0
	create
	push_a 2
	update_a 1 3
	update_a 2 1
	update_a 0 2
	pop_a 1
.d 3 0
	jsr e_StdList_sfilter
.o 1 0
.d 2 0
	jmp s8
.n 1 _ ea8
.o 1 0
n8
	push_node _cycle_in_spine 1
.o 2 0
ea8
	jsr_eval 0
.o 2 0
s8
	buildh _Nil 0
	push_a 1
.d 2 0
	jsr e_StdList_s==;85
.o 0 1 b
	jmp_false else.1
	fillh _Nil 0 1
	pop_a 1
.d 1 0
	rtn
else.1
	push_a 0
	build e_StdList_dtl 1 e_StdList_ntl
	build _ 1 n8
	buildh _Nil 0
	push_a 2
	build _ 1 n51
	build e_StdList_dlength;47 1 e_StdList_nlength;47
	push_a 3
	build e_StdList_dhd 1 e_StdList_nhd
	buildh _Tuple 2
	buildh _Cons 2
	update_a 1 2
	updatepop_a 0 1
.d 3 0
	jmp e_StdList_s++
.n 1 _ ea51
.o 1 0
n51
	push_node _cycle_in_spine 1
.o 2 0
ea51
.o 2 0
s51
	push_a 0
	updatepop_a 0 1
.d 1 0
	jsr e_StdList_shd
.o 1 0
	pushI_a 0
	pop_a 1
.d 1 1 i
	jmp s6
.desc d9 _hnf l9 1 0 "isPerfect"
.o 2 0
l9
	pop_a 1
.d 1 0
	jsr ea9
.o 0 1 b
	buildB_b 0
	pop_b 1
.d 1 0
	rtn
.o 1 0
ea9
	jsr_eval 0
	pushI_a 0
	pop_a 1
.o 0 1 i
s9
	pushI 1
	push_b 1
	subI
	create
	pushI 1
	buildI_b 2
.d 2 2 ii
	jsr s13
.o 1 0
.d 1 0
	jsr e_StdList_ssum;72
.o 0 1 i
	push_b 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	update_b 1 2
	updatepop_b 0 1
	eqI
.d 0 1 b
	rtn
.o 2 2 ii
s13
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.2
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	push_b 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	remI
	pushI 0
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	eqI
	jmp_false else.3
	push_b 1
	push_b 1
	push_a 0
	build_u _ 1 2 n50
	buildI_b 0
	fillh _Cons 2 3
	pop_a 1
	pop_b 2
.d 1 0
	rtn
else.3
	pushI 1
	push_b 1
	addI
	push_b 2
	push_a 0
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s13
else.2
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n50
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea50
.o 2 2 ii
s50
	pushI 1
	push_b 1
	addI
	push_b 2
	push_a 0
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s13
.o 1 1 i
s6
	pushI 0
	push_b 1
	eqI
	jmp_false else.4
	fillh _Nil 0 0
	pop_b 1
.d 1 0
	rtn
else.4
	buildh _Nil 0
	buildI 10
	buildI_b 0
	build _ 2 e_StdInt_nrem;28
	buildh _Cons 2
	pushI 10
	push_b 1
	divI
	create
	updatepop_b 0 1
.d 1 1 i
	jsr s6
.o 1 0
.d 3 0
	jmp e_StdList_s++
