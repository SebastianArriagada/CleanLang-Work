.comp 920 0101110100100
.start __Homework1_Start
.depend "_SystemEnumStrict"
.depend "_SystemStrictLists"
.depend "StdStrictLists"
.depend "_SystemEnum"
.depend "StdEnum"
.depend "StdMisc"
.depend "StdFunctions"
.depend "StdCharList"
.depend "StdTuple"
.depend "StdOrdList"
.depend "StdList"
.depend "StdClass"
.depend "StdFile"
.depend "StdString"
.depend "_SystemArray"
.depend "StdArray"
.depend "StdChar"
.depend "StdReal"
.depend "StdInt"
.depend "StdOverloaded"
.depend "StdBool"
.depend "StdEnv"
.endinfo
.module m_Homework1 "Homework1"
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod StdInt
.implab e_StdInt_s==;16
.export __Homework1_Start
.o 0 0
__Homework1_Start
	build _ 0 n12
.d 1 0
	jmp _driver
.n 0 _
.o 1 0
n12
	push_node _cycle_in_spine 0
.d 0 0
	jsr ea12
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 0 0
ea12
.o 0 0
s12
	pushI 10
.d 0 1 i
	jmp s11
.o 0 1 i
s11
	pushI 0
	push_b 1
	eqI
	jmp_false else.1
	pop_b 1
	buildAC "One"
.d 1 0
	rtn
else.1
	pushI 1
	push_b 1
	eqI
	jmp_false else.2
	pop_b 1
	buildAC "One"
.d 1 0
	rtn
else.2
	pushI 2
	push_b 1
	eqI
	jmp_false else.3
	pop_b 1
	buildAC "Two"
.d 1 0
	rtn
else.3
	pushI 3
	push_b 1
	eqI
	jmp_false else.4
	pop_b 1
	buildAC "Three"
.d 1 0
	rtn
else.4
	pushI 4
	push_b 1
	eqI
	jmp_false else.5
	pop_b 1
	buildAC "Four"
.d 1 0
	rtn
else.5
	pushI 5
	push_b 1
	eqI
	jmp_false else.6
	pop_b 1
	buildAC "Five"
.d 1 0
	rtn
else.6
	pushI 6
	push_b 1
	eqI
	jmp_false else.7
	pop_b 1
	buildAC "Six"
.d 1 0
	rtn
else.7
	pushI 7
	push_b 1
	eqI
	jmp_false else.8
	pop_b 1
	buildAC "Seven"
.d 1 0
	rtn
else.8
	pushI 8
	push_b 1
	eqI
	jmp_false else.9
	pop_b 1
	buildAC "Eight"
.d 1 0
	rtn
else.9
	pushI 9
	push_b 1
	eqI
	jmp_false else.10
	pop_b 1
	buildAC "Nine"
.d 1 0
	rtn
else.10
	pop_b 1
	buildAC "Not a digit"
.d 1 0
	rtn
